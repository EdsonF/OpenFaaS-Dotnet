version: "3.2"
services:
    gateway:
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        #ports:
        #    - 8080:8080
        image: functions/gateway:0.6.15
        depends_on:
            - nginx-proxy
        networks:
            - functions
        environment:
            dnsrr: "true"  # Temporarily use dnsrr in place of VIP while issue persists on PWD
            LETSENCRYPT_EMAIL: "frank@pommerening-online.de"
            LETSENCRYPT_HOST: "alexa.openfaas-dotnet.de"
            VIRTUAL_HOST: "alexa.openfaas-dotnet.de"
            VIRTUAL_PORT: "8080"
        deploy:
            placement:
                constraints:
                    - 'node.role == manager'
                    - 'node.platform.os == linux'
    prometheus:
        image: functions/prometheus:latest  # autobuild from Dockerfile in repo.
        command: "-config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -storage.local.memory-chunks=10000 --alertmanager.url=http://alertmanager:9093"
        #ports:
        #    - 9090:9090
        depends_on:
            - gateway
            - alertmanager
        environment:
            no_proxy: "gateway"
            LETSENCRYPT_EMAIL: "frank@pommerening-online.de"
            LETSENCRYPT_HOST: "webapp.pommerening-online.de"
            VIRTUAL_HOST: "webapp.pommerening-online.de"
            VIRTUAL_PORT: "9090"
        networks:
            - functions
        deploy:
            placement:
                constraints:
                    - 'node.role == manager'
                    - 'node.platform.os == linux'

    alertmanager:
        image: functions/alertmanager:latest    # autobuild from Dockerfile in repo.
        environment:
            no_proxy: "gateway"
        command:
            - '-config.file=/alertmanager.yml'
        networks:
            - functions
        # ports:
        #    - 9093:9093
        deploy:
            placement:
                constraints:
                    - 'node.role == manager'
                    - 'node.platform.os == linux'
    # Sample functions go here.

    # Service label of "function" allows functions to show up in UI on http://gateway:8080/
    alexa:
        image: fpommerening/openfaas-dotnet:alexa
        labels:
            function: "true"
        depends_on:
            - gateway
        networks:
            - functions
        environment:
            no_proxy: "gateway"
            https_proxy: $https_proxy
        deploy:
            placement:
                constraints:
                    - 'node.role == manager'
                    - 'node.platform.os == linux'

networks:
    functions:
         external:
            name: functions
